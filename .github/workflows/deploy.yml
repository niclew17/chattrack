name: Deploy CloudFormation Stack

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  STACK_NAME: chatgpt-usage-tracker
  LAMBDA_ZIP: lambda-package.zip

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install awscli

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Package Lambda Function
        run: |
          # Create a temporary directory for packaging
          mkdir -p package

          # Copy Lambda function and dependencies
          cp lambda_function.py package/
          cp -r $(python -c "import site; print(site.getsitepackages()[0])")/* package/

          # Create deployment package
          cd package
          zip -r ../${{ env.LAMBDA_ZIP }} .
          cd ..

          # Get timestamp for unique S3 key
          TIMESTAMP=$(date +%Y%m%d_%H%M%S)
          echo "LAMBDA_S3_KEY=deployments/$TIMESTAMP/${{ env.LAMBDA_ZIP }}" >> $GITHUB_ENV

          # Upload to S3
          aws s3 cp ${{ env.LAMBDA_ZIP }} s3://${{ secrets.AWS_S3_BUCKET }}/${{ env.LAMBDA_S3_KEY }}

      - name: Deploy CloudFormation Stack
        run: |
          aws cloudformation deploy \
            --template-file template.yaml \
            --stack-name ${{ env.STACK_NAME }} \
            --capabilities CAPABILITY_IAM \
            --parameter-overrides \
              DeploymentBucket=${{ secrets.AWS_S3_BUCKET }} \
              DeploymentPackageKey=${{ env.LAMBDA_S3_KEY }}
